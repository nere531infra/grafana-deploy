version: '3.9'
services:
  prometheus:
    image: prom/prometheus:v3.3.1
    hostname: prometheus
    container_name: grafana__prometheus
    restart: unless-stopped

    volumes:
      - type: volume
        source: prometheus_data
        target: /prometheus

      - type: bind
        source: ./prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=90d'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-admin-api'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-remote-write-receiver'

    networks:
      - internal

    deploy:
      resources:
        limits:
          memory: 256m

  node-exporter:
    image: prom/node-exporter:v1.9.1
    hostname: node-exporter
    container_name: grafana__node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - internal
    deploy:
      resources:
        limits:
          memory: 128m

  grafana:
    image: grafana/grafana-oss:11.6.0
    hostname: grafana
    container_name: grafana__grafana
    restart: unless-stopped

    environment:
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_USERS_ALLOW_ORG_CREATE: "false"
      GF_AUTH_ANONYMOUS_ENABLED: "true"

    volumes:
      - type: volume
        source: grafana_data
        target: /var/lib/grafana

    networks:
      - internal
      - outband

    deploy:
      resources:
        limits:
          memory: 512m

  cloudflared:
    image: cloudflare/cloudflared:2025.4.0-arm64@sha256:d87b1096195bb6e1104d3c5414efdb65bbe53598909a3e08d766b8adbb32d06a
    hostname: cloudflared
    container_name: grafana__cloudflared
    restart: unless-stopped

    environment:
      TUNNEL_LOGFILE: /dev/stdout

    command: tunnel run --token ${TUNNEL_TOKEN}

    networks:
      - internal
      - outband

    deploy:
      resources:
        limits:
          memory: 128m

volumes:
  prometheus_data:
    name: grafana__prometheus_data

  grafana_data:
    name: grafana__grafana_data

networks:
  internal:
    name: grafana__internal
    internal: true

  outband:
    name: grafana__outband